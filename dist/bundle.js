!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.avmoptimizer=t():e.avmoptimizer=t()}(window,function(){return function(e){var t={};function s(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,s),r.l=!0,r.exports}return s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)s.d(n,r,function(t){return e[t]}.bind(null,r));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=0)}([function(e,t,s){const n=s(1).NeonOpt;e.exports={NeonOpt:n}},function(e,t,s){function n(e,t,s="",n=""){this.hexcode=e,this.opname=t,this.comment=s,this.args=n,this.size=1+n.length/2}class r{static parseOpcodeList(e,t){if(0!=e.length&&e.length%2!=1){var s=""+e[0]+e[1];e=e.substr(2,e.length),e=r.parseOpcode(s,e,t),r.parseOpcodeList(e,t)}}static parseOpcode(e,t,s=[]){var i=parseInt(e,16);if("00"==e)s.push(new n(e,"PUSH0","#An empty array of bytes is pushed onto the stack"));else if(i>=1&&i<=75){var h="# ",o=0,u="",a="";for(o=0;o<i;o++){var p=""+t[0]+t[1];t=t.substr(2,t.length),u+=p,(d=parseInt(p,16))>=32&&d<=126&&(a+=String.fromCharCode(d))}h+=a,s.push(new n(e,"PUSHBYTES"+i,h,u))}else if("4c"==e){var l=0,c=""+t[0]+t[1];t=t.substr(2,t.length),h="#"+(l=parseInt(c,16))+" bytes: ";u="";for(o=0;o<l;o++)u+=""+t[0]+t[1],t=t.substr(2,t.length);h+="# "+l+" bytes pushed onto the stack",s.push(new n(e,"PUSHDATA1",h,u))}else if("4d"==e){l=0,c=""+t[0]+t[1];t=t.substr(2,t.length),l=parseInt(c,16),c=""+t[0]+t[1],t=t.substr(2,t.length),h="#"+(l+=256*parseInt(c,16))+" bytes: ";u="";for(o=0;o<l;o++)u+=""+t[0]+t[1],t=t.substr(2,t.length);h+="# "+l+" bytes pushed onto the stack",s.push(new n(e,"PUSHDATA2",h,u))}else if("4e"==e){l=0,c=""+t[0]+t[1];t=t.substr(2,t.length),l=parseInt(c,16),c=""+t[0]+t[1],t=t.substr(2,t.length),l+=256*parseInt(c,16),c=""+t[0]+t[1],t=t.substr(2,t.length),l+=65536*parseInt(c,16),c=""+t[0]+t[1],t=t.substr(2,t.length),h="#"+(l+=16777216*parseInt(c,16))+" bytes: ";u="";for(o=0;o<l;o++)u+=""+t[0]+t[1],t=t.substr(2,t.length);h+="# "+l+" bytes pushed onto the stack",s.push(new n(e,"PUSHDATA4",h,u))}else if("4f"==e)s.push(new n(e,"PUSHM1","#The number -1 is pushed onto the stack."));else if("51"==e)s.push(new n(e,"PUSH1","# The number 1 is pushed onto the stack."));else if("52"==e)s.push(new n(e,"PUSH2","# The number 2 is pushed onto the stack."));else if("53"==e)s.push(new n(e,"PUSH3","# The number 3 is pushed onto the stack."));else if("54"==e)s.push(new n(e,"PUSH4","# The number 4 is pushed onto the stack."));else if("55"==e)s.push(new n(e,"PUSH5","# The number 5 is pushed onto the stack."));else if("56"==e)s.push(new n(e,"PUSH6","# The number 6 is pushed onto the stack."));else if("57"==e)s.push(new n(e,"PUSH7","# The number 7 is pushed onto the stack."));else if("58"==e)s.push(new n(e,"PUSH8","# The number 8 is pushed onto the stack."));else if("59"==e)s.push(new n(e,"PUSH9","# The number 9 is pushed onto the stack."));else if("5a"==e)s.push(new n(e,"PUSH10","# The number 10 is pushed onto the stack."));else if("5b"==e)s.push(new n(e,"PUSH11","# The number 11 is pushed onto the stack."));else if("5c"==e)s.push(new n(e,"PUSH12","# The number 12 is pushed onto the stack."));else if("5d"==e)s.push(new n(e,"PUSH13","# The number 13 is pushed onto the stack."));else if("5e"==e)s.push(new n(e,"PUSH14","# The number 14 is pushed onto the stack."));else if("5f"==e)s.push(new n(e,"PUSH15","# The number 15 is pushed onto the stack."));else if("60"==e)s.push(new n(e,"PUSH16","# The number 16 is pushed onto the stack."));else if("61"==e)s.push(new n(e,"NOP","# Does nothing."));else if("62"==e){h="# ";var f=""+t[0]+t[1]+t[2]+t[3];t=t.substr(4,t.length),h+=""+r.byteArray2ToInt16(r.littleHexStringToBigByteArray(f)),s.push(new n(e,"JMP",h,f))}else if("63"==e){h="# ";f=""+t[0]+t[1]+t[2]+t[3];t=t.substr(4,t.length),h+=""+r.byteArray2ToInt16(r.littleHexStringToBigByteArray(f)),s.push(new n(e,"JMPIF",h,f))}else if("64"==e){h="# ";f=""+t[0]+t[1]+t[2]+t[3];t=t.substr(4,t.length),h+=""+r.byteArray2ToInt16(r.littleHexStringToBigByteArray(f)),s.push(new n(e,"JMPIFNOT",h,f))}else if("65"==e){h="# ";f=""+t[0]+t[1]+t[2]+t[3];t=t.substr(4,t.length),h+=""+r.byteArray2ToInt16(r.littleHexStringToBigByteArray(f)),s.push(new n(e,"CALL",h,f))}else if("66"==e)s.push(new n(e,"RET","#"));else if("68"==e){h="# ",u=f=""+t[0]+t[1],t=t.substr(2,t.length);var w=parseInt(f,16);a="",o=0;for(o=0;o<w;o++){var d;p=""+t[0]+t[1];t=t.substr(2,t.length),u+=p,(d=parseInt(p,16))>=32&&d<=126&&(a+=String.fromCharCode(d))}h+=a,s.push(new n(e,"SYSCALL",h,u))}else if("67"==e||"69"==e){var b="";"69"==e&&(b="TAILCALL"),"67"==e&&(b="APPCALL");var g="";for(o=0;o<20;o++){var T=""+t[0]+t[1];t=t.substr(2,t.length),g+=T}s.push(new n(e,b,h,g))}else"6a"==e?s.push(new n(e,"DUPFROMALTSTACK","#")):"6b"==e?s.push(new n(e,"TOALTSTACK","# Puts the input onto the top of the alt stack. Removes it from the main stack.")):"6c"==e?s.push(new n(e,"FROMALTSTACK","# Puts the input onto the top of the main stack. Removes it from the alt stack.")):"6d"==e?s.push(new n(e,"XDROP","#")):"72"==e?s.push(new n(e,"XSWAP","#")):"73"==e?s.push(new n(e,"XTUCK","#")):"74"==e?s.push(new n(e,"DEPTH","# Puts the number of stack items onto the stack.")):"75"==e?s.push(new n(e,"DROP","# Removes the top stack item.")):"76"==e?s.push(new n(e,"DUP","# Duplicates the top stack item.")):"77"==e?s.push(new n(e,"NIP","# Removes the second-to-top stack item.")):"78"==e?s.push(new n(e,"OVER","# Copies the second-to-top stack item to the top.")):"79"==e?s.push(new n(e,"PICK","# The item n back in the stack is copied to the top.")):"7a"==e?s.push(new n(e,"ROLL","# The item n back in the stack is moved to the top.")):"7b"==e?s.push(new n(e,"ROT","# The top three items on the stack are rotated to the left.")):"7c"==e?s.push(new n(e,"SWAP","# The top two items on the stack are swapped.")):"7d"==e?s.push(new n(e,"TUCK","# The item at the top of the stack is copied and inserted before the second-to-top item.")):"7e"==e?s.push(new n(e,"CAT","# Concatenates two strings.")):"7f"==e?s.push(new n(e,"SUBSTR","# Returns a section of a string.")):"80"==e?s.push(new n(e,"LEFT","# Keeps only characters left of the specified point in a string.")):"81"==e?s.push(new n(e,"RIGHT","# Keeps only characters right of the specified point in a string.")):"82"==e?s.push(new n(e,"SIZE","# Returns the length of the input string.")):"83"==e?s.push(new n(e,"INVERT","# Flips all of the bits in the input.")):"84"==e?s.push(new n(e,"AND","# Boolean and between each bit in the inputs.")):"85"==e?s.push(new n(e,"OR","# Boolean or between each bit in the inputs.")):"86"==e?s.push(new n(e,"XOR","# Boolean exclusive or between each bit in the inputs.")):"87"==e?s.push(new n(e,"EQUAL","# Returns 1 if the inputs are exactly equal, 0 otherwise.")):"8b"==e?s.push(new n(e,"INC","# 1 is added to the input.")):"8c"==e?s.push(new n(e,"DEC","# 1 is subtracted from the input.")):"8d"==e?s.push(new n(e,"SIGN","#")):"8f"==e?s.push(new n(e,"NEGATE","# The sign of the input is flipped.")):"90"==e?s.push(new n(e,"ABS","# The input is made positive.")):"91"==e?s.push(new n(e,"NOT","# If the input is 0 or 1, it is flipped. Otherwise the output will be 0.")):"92"==e?s.push(new n(e,"NZ","# Returns 0 if the input is 0. 1 otherwise.")):"93"==e?s.push(new n(e,"ADD","# a is added to b.")):"94"==e?s.push(new n(e,"SUB","# b is subtracted from a.")):"95"==e?s.push(new n(e,"MUL","# a is multiplied by b.")):"96"==e?s.push(new n(e,"DIV","# a is divided by b.")):"97"==e?s.push(new n(e,"MOD","# Returns the remainder after dividing a by b.")):"98"==e?s.push(new n(e,"SHL","# Shifts a left b bits, preserving sign.")):"99"==e?s.push(new n(e,"SHR","# Shifts a right b bits, preserving sign.")):"9a"==e?s.push(new n(e,"BOOLAND","# If both a and b are not 0, the output is 1. Otherwise 0.")):"9b"==e?s.push(new n(e,"BOOLOR","# If a or b is not 0, the output is 1. Otherwise 0.")):"9c"==e?s.push(new n(e,"NUMEQUAL","# Returns 1 if the numbers are equal, 0 otherwise.")):"9e"==e?s.push(new n(e,"NUMNOTEQUAL","# Returns 1 if the numbers are not equal, 0 otherwise.")):"9f"==e?s.push(new n(e,"LT","# Returns 1 if a is less than b, 0 otherwise.")):"a0"==e?s.push(new n(e,"GT","# Returns 1 if a is greater than b, 0 otherwise.")):"a1"==e?s.push(new n(e,"LTE","# Returns 1 if a is less than or equal to b, 0 otherwise.")):"a2"==e?s.push(new n(e,"GTE","# Returns 1 if a is greater than or equal to b, 0 otherwise.")):"a3"==e?s.push(new n(e,"MIN","# Returns the smaller of a and b.")):"a4"==e?s.push(new n(e,"MAX","# Returns the larger of a and b.")):"a5"==e?s.push(new n(e,"WITHIN","# Returns 1 if x is within the specified range (left-inclusive), 0 otherwise.")):"a7"==e?s.push(new n(e,"SHA1","# The input is hashed using SHA-1.")):"a8"==e?s.push(new n(e,"SHA256","# The input is hashed using SHA-256.")):"a9"==e?s.push(new n(e,"HASH160","# The input is hashed using HASH160.")):"aa"==e?s.push(new n(e,"HASH256","# The input is hashed using HASH256.")):"ac"==e?s.push(new n(e,"CHECKSIG","#")):"ae"==e?s.push(new n(e,"CHECKMULTISIG","#")):"c0"==e?s.push(new n(e,"ARRAYSIZE","#")):"c1"==e?s.push(new n(e,"PACK","#")):"c2"==e?s.push(new n(e,"UNPACK","#")):"c3"==e?s.push(new n(e,"PICKITEM","#")):"c4"==e?s.push(new n(e,"SETITEM","#")):"c5"==e?s.push(new n(e,"NEWARRAY","#")):"c6"==e?s.push(new n(e,"NEWSTRUCT","#")):"c8"==e?s.push(new n(e,"APPEND","#")):"c9"==e?s.push(new n(e,"REVERSE","#")):"ca"==e?s.push(new n(e,"REMOVE","#")):"f0"==e?s.push(new n(e,"THROW","#")):"f1"==e?s.push(new n(e,"THROWIFNOT","#")):s.push(new n(e,"???","#"));return t}static byteArray2ToInt16(e){return 2!=e.length?0:(e[0]<<8|e[1])<<16>>16}static int16ToByteArray2(e){for(var t=(e>>>0).toString(16);t.length<4;)t="0"+t;for(;t.length>4;)t=t.substr(1,t.length);for(var s=[];s.length<2;)s.push(Number("0x"+t[0]+t[1])),t=t.substr(2,t.length);return s}static littleHexStringToBigByteArray(e){if(4!=e.length)return[];for(var t=[];e.length>0;)t.push(Number("0x"+e[0]+e[1])),e=e.substr(2,e.length);return t.reverse(),t}static bigByteArray2TolittleHexString(e){if(2!=e.length)return"";var t="",s=0;for(s=0;s<e.length;s++){var n=e[s].toString(16);1==n.length&&(n="0"+n),t=n+t}return t}static removeOP(e,t){e.splice(t,1);for(var s=0,n=0,i=t-1,h=1;i>0;){if("J"==e[i].opname[0]||"65"==e[i].hexcode)if(h<=(u=r.byteArray2ToInt16(r.littleHexStringToBigByteArray(e[i].args)))){s++,u-=1;var o=r.bigByteArray2TolittleHexString(r.int16ToByteArray2(u));e[i].args=o,e[i].comment="# "+u}h+=e[i].size,i--}for(i=t,h=1;i<e.length;){var u;if("J"==e[i].opname[0]||"65"==e[i].hexcode)if((u=r.byteArray2ToInt16(r.littleHexStringToBigByteArray(e[i].args)))<=-h){n++,u+=1;o=r.bigByteArray2TolittleHexString(r.int16ToByteArray2(u));e[i].args=o,e[i].comment="# "+u}h+=e[i].size,i++}return n+s}static removeNOP(e){for(var t=0,s=0,n=0;n<e.length;)"61"==e[n].hexcode?(console.log("found NOP at i="+n+" oplist="+e.length+"\n"),t++,s+=r.removeOP(e,n)):n++;return console.log("removed NOPs: "+t+" Adjusted "+s+" jumps/calls."),t}static detectDUPFROMALTSTACK(e){for(var t=0,s=0,n=0;n<e.length-2;)"6c"==e[n].hexcode&&"76"==e[n+1].hexcode&&"6b"==e[n+2].hexcode?(console.log("will add DUPFROMALTSTACK at i="+n+" oplist="+e.length+"\n"),t++,s+=r.removeOP(e,n),s+=r.removeOP(e,n),e[n].hexcode="6a",e[n].opname="DUPFROMALTSTACK",e[n].comment="#"):n++;return console.log("added DUPFROMALTSTACK: "+t+" Adjusted "+s+" jumps/calls."),t}static inlineSWAP(e){for(var t=0,s=0,n=0;n<e.length-2;){var i=parseInt(e[n].hexcode,16),h=0==i||i>=79&&i<=96,o=parseInt(e[n+1].hexcode,16);if(h&&(0==o||o>=79&&o<=96)&&"7c"==e[n+2].hexcode){console.log("will inline SWAP i="+(n+2)+" oplist="+e.length+"\n"),t++,s+=r.removeOP(e,n+2);var u=e[n];e[n]=e[n+1],e[n+1]=u}else n++}return console.log("inlined SWAP: "+t+" Adjusted "+s+" jumps/calls."),t}static optimizeAVM(e){console.log("will remove NOPs");var t=r.removeNOP(e);console.log("will detectDUPFROMALTSTACK");var s=r.detectDUPFROMALTSTACK(e);return console.log("will inline SWAP"),t+s+r.inlineSWAP(e)}static getAVMFromList(e){var t="",s=0;for(s=0;s<e.length;s++)t+=e[s].hexcode+e[s].args;return t}}e.exports=r}])});